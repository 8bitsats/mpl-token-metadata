/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Context,
  GetDataEnumKind,
  GetDataEnumKindContent,
  Option,
  Serializer,
} from '@lorisleiva/js-core';
import {
  AuthorizationData,
  AuthorizationDataArgs,
  getAuthorizationDataSerializer,
} from '.';

export type DelegateArgs =
  | { __kind: 'CollectionV1'; authorizationData: Option<AuthorizationData> }
  | {
      __kind: 'SaleV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'TransferV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | { __kind: 'UpdateV1'; authorizationData: Option<AuthorizationData> }
  | {
      __kind: 'UtilityV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'StakingV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | { __kind: 'StandardV1'; amount: bigint };

export type DelegateArgsArgs =
  | { __kind: 'CollectionV1'; authorizationData: Option<AuthorizationDataArgs> }
  | {
      __kind: 'SaleV1';
      amount: number | bigint;
      authorizationData: Option<AuthorizationDataArgs>;
    }
  | {
      __kind: 'TransferV1';
      amount: number | bigint;
      authorizationData: Option<AuthorizationDataArgs>;
    }
  | { __kind: 'UpdateV1'; authorizationData: Option<AuthorizationDataArgs> }
  | {
      __kind: 'UtilityV1';
      amount: number | bigint;
      authorizationData: Option<AuthorizationDataArgs>;
    }
  | {
      __kind: 'StakingV1';
      amount: number | bigint;
      authorizationData: Option<AuthorizationDataArgs>;
    }
  | { __kind: 'StandardV1'; amount: number | bigint };

export function getDelegateArgsSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<DelegateArgsArgs, DelegateArgs> {
  const s = context.serializer;
  return s.dataEnum<DelegateArgs>(
    [
      [
        'CollectionV1',
        s.struct<GetDataEnumKindContent<DelegateArgs, 'CollectionV1'>>(
          [
            [
              'authorizationData',
              s.option(getAuthorizationDataSerializer(context)),
            ],
          ],
          'CollectionV1'
        ),
      ],
      [
        'SaleV1',
        s.struct<GetDataEnumKindContent<DelegateArgs, 'SaleV1'>>(
          [
            ['amount', s.u64],
            [
              'authorizationData',
              s.option(getAuthorizationDataSerializer(context)),
            ],
          ],
          'SaleV1'
        ),
      ],
      [
        'TransferV1',
        s.struct<GetDataEnumKindContent<DelegateArgs, 'TransferV1'>>(
          [
            ['amount', s.u64],
            [
              'authorizationData',
              s.option(getAuthorizationDataSerializer(context)),
            ],
          ],
          'TransferV1'
        ),
      ],
      [
        'UpdateV1',
        s.struct<GetDataEnumKindContent<DelegateArgs, 'UpdateV1'>>(
          [
            [
              'authorizationData',
              s.option(getAuthorizationDataSerializer(context)),
            ],
          ],
          'UpdateV1'
        ),
      ],
      [
        'UtilityV1',
        s.struct<GetDataEnumKindContent<DelegateArgs, 'UtilityV1'>>(
          [
            ['amount', s.u64],
            [
              'authorizationData',
              s.option(getAuthorizationDataSerializer(context)),
            ],
          ],
          'UtilityV1'
        ),
      ],
      [
        'StakingV1',
        s.struct<GetDataEnumKindContent<DelegateArgs, 'StakingV1'>>(
          [
            ['amount', s.u64],
            [
              'authorizationData',
              s.option(getAuthorizationDataSerializer(context)),
            ],
          ],
          'StakingV1'
        ),
      ],
      [
        'StandardV1',
        s.struct<GetDataEnumKindContent<DelegateArgs, 'StandardV1'>>(
          [['amount', s.u64]],
          'StandardV1'
        ),
      ],
    ],
    undefined,
    'DelegateArgs'
  ) as Serializer<DelegateArgsArgs, DelegateArgs>;
}

// Data Enum Helpers.
export function delegateArgs(
  kind: 'CollectionV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'CollectionV1'>
): GetDataEnumKind<DelegateArgsArgs, 'CollectionV1'>;
export function delegateArgs(
  kind: 'SaleV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'SaleV1'>
): GetDataEnumKind<DelegateArgsArgs, 'SaleV1'>;
export function delegateArgs(
  kind: 'TransferV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'TransferV1'>
): GetDataEnumKind<DelegateArgsArgs, 'TransferV1'>;
export function delegateArgs(
  kind: 'UpdateV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'UpdateV1'>
): GetDataEnumKind<DelegateArgsArgs, 'UpdateV1'>;
export function delegateArgs(
  kind: 'UtilityV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'UtilityV1'>
): GetDataEnumKind<DelegateArgsArgs, 'UtilityV1'>;
export function delegateArgs(
  kind: 'StakingV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'StakingV1'>
): GetDataEnumKind<DelegateArgsArgs, 'StakingV1'>;
export function delegateArgs(
  kind: 'StandardV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'StandardV1'>
): GetDataEnumKind<DelegateArgsArgs, 'StandardV1'>;
export function delegateArgs<K extends DelegateArgsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<DelegateArgsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isDelegateArgs<K extends DelegateArgs['__kind']>(
  kind: K,
  value: DelegateArgs
): value is DelegateArgs & { __kind: K } {
  return value.__kind === kind;
}
